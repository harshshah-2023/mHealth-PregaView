package com.example.myapplication.ui.recommendation


import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import com.example.myapplication.R
import com.example.myapplication.databinding.FragmentRecommendationsBinding
import com.example.myapplication.ui.prediction.PredictionDataViewModel

class RecommendationsFragment : Fragment() {
    private var _binding: FragmentRecommendationsBinding? = null
    private val binding get() = _binding!!
    private lateinit var predictionViewModel: PredictionDataViewModel

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentRecommendationsBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        predictionViewModel = ViewModelProvider(requireActivity()).get(PredictionDataViewModel::class.java)
        setupRecommendations()
    }

    private fun setupRecommendations() {
        // Get all health data
        val heartRate = predictionViewModel.getHeartRateValue()
        val bloodPressure = predictionViewModel.getBloodPressureValue()
        val glucoseLevel = predictionViewModel.getGlucoseLevelValue()
        val weight = predictionViewModel.getWeightValue()

        // Generate recommendations based on vitals
        val vitalRecommendations = generateVitalRecommendations(heartRate, bloodPressure, glucoseLevel, weight)

        // Display recommendations
        binding.vitalRecommendations.text = vitalRecommendations

        // You can add more sections here for symptom-based recommendations
    }

    private fun generateVitalRecommendations(
        heartRate: Int?,
        bloodPressure: Int?,
        glucoseLevel: Int?,
        weight: Int?
    ): String {
        val recommendations = StringBuilder()

        // Heart Rate recommendations
        heartRate?.let { hr ->
            recommendations.append("### Heart Rate (${hr}bpm) ###\n\n")
            when {
                hr < 60 -> {
                    recommendations.append("ðŸš© Low Heart Rate (Bradycardia)\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Stay hydrated\n")
                    recommendations.append("â€¢ Practice deep breathing exercises\n")
                    recommendations.append("â€¢ Get adequate sleep\n")
                    recommendations.append("â€¢ Monitor for dizziness or fainting\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't consume excessive caffeine\n")
                    recommendations.append("â€¢ Don't stand up too quickly\n")
                    recommendations.append("â€¢ Avoid strenuous exercise without medical clearance\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Gentle yoga\n")
                    recommendations.append("â€¢ Short, slow walks\n")
                    recommendations.append("â€¢ Meditation for stress reduction\n\n")
                }
                hr > 100 -> {
                    recommendations.append("ðŸš© High Heart Rate (Tachycardia)\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Practice relaxation techniques\n")
                    recommendations.append("â€¢ Stay hydrated\n")
                    recommendations.append("â€¢ Monitor your pulse regularly\n")
                    recommendations.append("â€¢ Keep a symptom diary\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't consume stimulants (caffeine, nicotine)\n")
                    recommendations.append("â€¢ Avoid excessive heat\n")
                    recommendations.append("â€¢ Don't ignore persistent rapid heart rate\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Deep breathing exercises\n")
                    recommendations.append("â€¢ Moderate-paced walking\n")
                    recommendations.append("â€¢ Aquatic exercises (if approved by doctor)\n\n")
                }
                else -> {
                    recommendations.append("âœ… Normal Heart Rate Range\n\n")
                    recommendations.append("Maintenance Tips:\n")
                    recommendations.append("â€¢ Continue regular moderate exercise\n")
                    recommendations.append("â€¢ Stay hydrated\n")
                    recommendations.append("â€¢ Practice stress management\n\n")
                }
            }
        }

        // Blood Pressure recommendations
        bloodPressure?.let { bp ->
            recommendations.append("\n### Blood Pressure (${bp}mmHg) ###\n\n")
            when {
                bp < 90 -> {
                    recommendations.append("ðŸš© Low Blood Pressure (Hypotension)\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Increase fluid and salt intake (if advised by doctor)\n")
                    recommendations.append("â€¢ Rise slowly from sitting/lying positions\n")
                    recommendations.append("â€¢ Wear compression stockings if recommended\n")
                    recommendations.append("â€¢ Eat small, frequent meals\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't stand for long periods\n")
                    recommendations.append("â€¢ Avoid hot showers/baths\n")
                    recommendations.append("â€¢ Don't skip meals\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Gentle leg exercises while seated\n")
                    recommendations.append("â€¢ Swimming (with supervision)\n")
                    recommendations.append("â€¢ Chair yoga\n\n")
                }
                bp > 120 -> {
                    recommendations.append("ðŸš© High Blood Pressure (Hypertension)\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Reduce sodium intake\n")
                    recommendations.append("â€¢ Increase potassium-rich foods (bananas, spinach)\n")
                    recommendations.append("â€¢ Practice stress reduction techniques\n")
                    recommendations.append("â€¢ Monitor BP regularly\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't consume excessive alcohol\n")
                    recommendations.append("â€¢ Avoid processed foods high in salt\n")
                    recommendations.append("â€¢ Don't smoke\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Brisk walking\n")
                    recommendations.append("â€¢ Swimming\n")
                    recommendations.append("â€¢ Tai chi\n")
                    recommendations.append("â€¢ Gardening\n\n")
                }
                else -> {
                    recommendations.append("âœ… Normal Blood Pressure Range\n\n")
                    recommendations.append("Maintenance Tips:\n")
                    recommendations.append("â€¢ Continue heart-healthy diet\n")
                    recommendations.append("â€¢ Regular physical activity\n")
                    recommendations.append("â€¢ Annual blood pressure checks\n\n")
                }
            }
        }

        // Glucose Level recommendations
        glucoseLevel?.let { glucose ->
            recommendations.append("\n### Glucose Level (${glucose}mg/dL) ###\n\n")
            when {
                glucose < 70 -> {
                    recommendations.append("ðŸš© Low Blood Sugar (Hypoglycemia)\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Consume 15g fast-acting carbs (juice, glucose tablets)\n")
                    recommendations.append("â€¢ Recheck after 15 minutes\n")
                    recommendations.append("â€¢ Follow with protein snack once stable\n")
                    recommendations.append("â€¢ Always carry emergency sugar source\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't ignore symptoms\n")
                    recommendations.append("â€¢ Avoid treating with chocolate/candy bars\n")
                    recommendations.append("â€¢ Don't drive until glucose normalizes\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Light walking after meals\n")
                    recommendations.append("â€¢ Gentle stretching\n")
                    recommendations.append("â€¢ Avoid strenuous exercise when glucose is low\n\n")
                }
                glucose > 140 -> {
                    recommendations.append("ðŸš© High Blood Sugar (Hyperglycemia)\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Drink plenty of water\n")
                    recommendations.append("â€¢ Monitor for ketones if type 1 diabetes\n")
                    recommendations.append("â€¢ Follow medication regimen\n")
                    recommendations.append("â€¢ Choose low-glycemic index foods\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't consume sugary drinks/foods\n")
                    recommendations.append("â€¢ Avoid skipping meals\n")
                    recommendations.append("â€¢ Don't ignore persistent high readings\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Moderate exercise (if no ketones present)\n")
                    recommendations.append("â€¢ Walking after meals\n")
                    recommendations.append("â€¢ Water aerobics\n")
                    recommendations.append("â€¢ Resistance training\n\n")
                }
                else -> {
                    recommendations.append("âœ… Normal Glucose Range\n\n")
                    recommendations.append("Maintenance Tips:\n")
                    recommendations.append("â€¢ Balanced meals with fiber\n")
                    recommendations.append("â€¢ Regular physical activity\n")
                    recommendations.append("â€¢ Annual glucose monitoring\n\n")
                }
            }
        }

        // Weight recommendations
        weight?.let { wt ->
            recommendations.append("\n### Weight (${wt}lbs) ###\n\n")
            when {
                wt > 35 -> {
                    recommendations.append("ðŸš© Excessive Weight Gain\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Focus on nutrient-dense foods\n")
                    recommendations.append("â€¢ Stay active with doctor-approved exercises\n")
                    recommendations.append("â€¢ Monitor portion sizes\n")
                    recommendations.append("â€¢ Keep a food diary\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't diet excessively\n")
                    recommendations.append("â€¢ Avoid sugary drinks\n")
                    recommendations.append("â€¢ Don't skip meals\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Walking (30 mins daily)\n")
                    recommendations.append("â€¢ Prenatal yoga\n")
                    recommendations.append("â€¢ Swimming\n")
                    recommendations.append("â€¢ Light strength training\n\n")
                }
                wt < 25 -> {
                    recommendations.append("ðŸš© Inadequate Weight Gain\n\n")
                    recommendations.append("DOs:\n")
                    recommendations.append("â€¢ Eat frequent, small meals\n")
                    recommendations.append("â€¢ Choose nutrient-rich foods\n")
                    recommendations.append("â€¢ Add healthy fats (avocados, nuts)\n")
                    recommendations.append("â€¢ Monitor weight weekly\n\n")
                    recommendations.append("DON'Ts:\n")
                    recommendations.append("â€¢ Don't skip meals\n")
                    recommendations.append("â€¢ Avoid empty calories\n")
                    recommendations.append("â€¢ Don't ignore persistent nausea\n\n")
                    recommendations.append("Recommended Activities:\n")
                    recommendations.append("â€¢ Gentle walking to stimulate appetite\n")
                    recommendations.append("â€¢ Light stretching\n")
                    recommendations.append("â€¢ Relaxation techniques for stress\n\n")
                }
                else -> {
                    recommendations.append("âœ… Healthy Weight Gain Range\n\n")
                    recommendations.append("Maintenance Tips:\n")
                    recommendations.append("â€¢ Continue balanced diet\n")
                    recommendations.append("â€¢ Regular moderate exercise\n")
                    recommendations.append("â€¢ Monthly weight checks\n\n")
                }
            }
        }

        return recommendations.toString()
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}